<Window x:Class="SDKDemo.SampleMeetingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SDKDemo"
        mc:Ignorable="d" x:Name="meetingWnd"
        ResizeMode="CanMinimize" SizeToContent="WidthAndHeight"
        Title="SDKDemoMeetingWindow">
    <Window.Resources>
        <BitmapImage x:Key="tbMic" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_mute_mic.png"/>
        <BitmapImage x:Key="tbMicMuted" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_mic_muted.png"/>

        <BitmapImage x:Key="tbCamera" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_local_video.png"/>
        <BitmapImage x:Key="tbCameraMuted" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_localvideo_muted.png"/>

        <BitmapImage x:Key="tbLayoutLecture" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_lecture_view.png"/>
        <BitmapImage x:Key="tbLayoutGallery" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_galary_view.png"/>

        <BitmapImage x:Key="btnDropCall" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_drop_call.png"/>

        <BitmapImage x:Key="tbtnUp" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_up.png"/>

        <BitmapImage x:Key="listSpeaker" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_switch_speaker.png"/>
        <BitmapImage x:Key="listMic" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_switch_mic.png"/>
        <BitmapImage x:Key="listCamera" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_switch_camera.png"/>

        <BitmapImage x:Key="listItemCheckedBlue" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_checked_blue.png"/>
        <BitmapImage x:Key="listItemCheckedWhite" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_checked_white.png"/>


        <BitmapImage x:Key="listShareCotent" UriSource="pack://application:,,,/Resources/Images/FRTC/frtc_toolbar_share_content.png"/>


        <DataTemplate x:Key="deviceListItem">
            <Border x:Name="layout" Height="24" Cursor="Hand" Background="Transparent" BorderThickness="0">
                <StackPanel Orientation="Horizontal" Margin="12,0,0,0">
                    <Image x:Name="imgChecked" Source="{StaticResource listItemCheckedBlue}"
                           Visibility="Hidden" Width="12" Height="12" Stretch="Uniform" VerticalAlignment="Center"/>
                    <TextBlock x:Name="txt" Text="{Binding DeviceName}" VerticalAlignment="Center" Margin="4,0,0,0" Foreground="#222222" FontSize="12"/>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="True">
                    <Setter TargetName="imgChecked" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="layout" Property="Background" Value="#1F80FF"/>
                    <Setter TargetName="txt" Property="Foreground" Value="#FFFFFF"/>
                    <Setter TargetName="imgChecked" Property="Source" Value="{StaticResource listItemCheckedWhite}"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Border Name="videoArea" Width="800" Height="450" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <ScrollViewer Grid.Row="0" Grid.Column="1" ScrollViewer.CanContentScroll="True" Width="300" Height="450"
                   ScrollViewer.VerticalScrollBarVisibility="Auto">
            <TextBlock Name="tbMsg" Width="300" TextWrapping="Wrap" ScrollViewer.CanContentScroll="True"
                   ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        </ScrollViewer>

        <UniformGrid Margin="10,0,10,0" Columns="5" Grid.Row="1" Grid.ColumnSpan="2" Height="50">
            <StackPanel Orientation="Horizontal">
                <ToggleButton  x:Name="tbtnMic" Margin="0,0,0,0" MinWidth="48"
                           Click="TbtnMic_Click">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{StaticResource tbMic}"/>
                            <Setter Property="Tag" Value="闭麦"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource tbMicMuted}"/>
                                    <Setter Property="Tag" Value="开麦"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton x:Name="tbSwitchAudio" Width="12" Height="48" Margin="2,0,0,0">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="layout" CornerRadius="2" Background="#F0F0F5">
                                            <Image Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{StaticResource tbtnUp}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Popup x:Name="popupSwitchAudio" PlacementTarget="{Binding ElementName=tbSwitchAudio}" Placement="Top" HorizontalOffset="-60" VerticalOffset="-10"
                           IsOpen="{Binding ElementName=tbSwitchAudio, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True">
                    <Border x:Name="switchAudioLayout" Width="auto" Height="auto" CornerRadius="4" Padding="0,12,0,12" Background="#F8F9FA" Effect="{StaticResource FRTC_WindowShadowEffect}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="16,0,0,0" Height="18">
                                <Image Source="{StaticResource listSpeaker}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                <TextBlock Text="扬声器" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                            </StackPanel>
                            <ListView x:Name="listSpeaker" Grid.Row="1" Margin="0,8,0,8" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedValuePath="DeviceID"
                                          SelectionChanged="listSpeaker_SelectionChanged">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Margin" Value="0,0,8,0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            <Rectangle Height="1" Fill="#D1D1D1" Grid.Row="1" VerticalAlignment="Bottom"/>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16,8,0,0" Height="18">
                                <Image Source="{StaticResource listMic}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                <TextBlock Text="选择麦克风" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                            </StackPanel>
                            <ListView x:Name="listMic" Grid.Row="3" Margin="0,8,0,0" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedValuePath="DeviceID"
                                          SelectionChanged="listMic_SelectionChanged">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Margin" Value="0,0,8,0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>
                    </Border>
                </Popup>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Width="auto">
                <ToggleButton x:Name="tbtnMuteCamera" MinWidth="48" 
                          Margin="0,0,0,0" Click="tbtnMuteCamera_Click">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{StaticResource tbCamera}"/>
                            <!--<Setter Property="IsChecked" Value="{Binding CameraMuted, Mode=TwoWay}"/>-->
                            <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                            <Setter Property="Tag" Value="关摄像头"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource tbCameraMuted}"/>
                                    <Setter Property="Tag" Value="开摄像头"/>
                                </Trigger>
                                <!--<MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsShowToolBar}" Value="True"/>
                                    <Condition Binding="{Binding IsShowCamralBtn}" Value="True"/>
                                    <Condition Binding="{Binding IsAudioOnly}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>-->
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton x:Name="tbSwitchCamera" Width="12" Height="48" Margin="2,0,0,0">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="layout" CornerRadius="2" Background="#F0F0F5">
                                            <Image Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{StaticResource tbtnUp}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Popup x:Name="popupSwitchCamera" PlacementTarget="{Binding ElementName=tbSwitchCamera}" Placement="Top" HorizontalOffset="-60" VerticalOffset="-10"
                           IsOpen="{Binding ElementName=tbSwitchCamera, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True">
                    <Border x:Name="switchCameraLayout" Width="auto" Height="auto" CornerRadius="4" Padding="0,12,0,12" Background="#F8F9FA" Effect="{StaticResource FRTC_WindowShadowEffect}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="16,0,0,0" Height="18">
                                <Image Source="{StaticResource listCamera}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                <TextBlock Text="选择摄像头" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                            </StackPanel>
                            <ListView x:Name="listCamera" Grid.Row="1" Margin="0,8,0,0" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedValuePath="DeviceID"
                                        SelectionChanged="listCamera_SelectionChanged">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Margin" Value="0,0,8,0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>
                    </Border>
                </Popup>
            </StackPanel>

            <ToggleButton  x:Name="tbtnVideoLayout" Margin="0,0,0,0" MinWidth="48"
                           Click="tbtnVideoLayout_Click">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                        <Setter Property="Content" Value="{StaticResource tbLayoutLecture}"/>
                        <Setter Property="Tag" Value="演讲者视图"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="{StaticResource tbLayoutGallery}"/>
                                <Setter Property="Tag" Value="画廊视图"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>


            <ToggleButton x:Name="tbtbShareContent" Width="48" Click="tbtbShareContent_Click">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                        <Setter Property="Content" Value="{StaticResource listShareCotent}"/>
                        <Setter Property="Tag" Value="共享"/>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Popup x:Name="popupShareContent" PlacementTarget="{Binding ElementName=tbtbShareContent}" Placement="Top" HorizontalOffset="-60" VerticalOffset="-10"
                           IsOpen="{Binding ElementName=tbtbShareContent, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True">
                <Border x:Name="shareContentLayout" Width="auto" Height="auto" CornerRadius="4" Padding="0,12,0,12" Background="#F8F9FA" Effect="{StaticResource FRTC_WindowShadowEffect}">
                    <StackPanel>
                        <Button Width="60" Height="20" Content="停止共享" x:Name="btnStopShare" Click="btnStopShare_Click"/>
                        <ListView x:Name="listContentSource" SelectionMode="Single" Width="400" Height="300"
                            BorderThickness="1" DisplayMemberPath="Title" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectionChanged="listContentSource_SelectionChanged">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Margin" Value="0,0,8,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </StackPanel>
                </Border>
            </Popup>

            <Button x:Name="btnDropCall" Style="{StaticResource FRTC_ToolbarClickBtnStyle}"
                    Content="{StaticResource btnDropCall}" Tag="离会" Foreground="#E32726" Width="48"
                    Click="btnDropCall_Click"/>
        </UniformGrid>
    </Grid>
</Window>
