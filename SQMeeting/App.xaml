<Application x:Class="SQMeeting.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:frtcView="clr-namespace:SQMeeting.FRTCView"
             xmlns:Helper="clr-namespace:SQMeeting.Helper"
             xmlns:vm="clr-namespace:SQMeeting.ViewModel" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:res="clr-namespace:SQMeeting.Properties"
             xmlns:converter="clr-namespace:SQMeeting.Converters"
             d1p1:Ignorable="d"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             StartupUri="FRTCView/LaunchingWindow.xaml" ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>
            

            <converter:BitmapToImageSourceConverter x:Key="BitmapToImageSource"/>
            <converter:BoolToVisibilityConverter x:Key="BoolToCollapsed"/>
            <converter:InverseBoolConverter x:Key="InverseBool"/>


            <x:Static x:Key="emptyStr" Member="sys:String.Empty" />
            <SolidColorBrush x:Key="CaptionBarBG" Color="#00263D" />
            <SolidColorBrush x:Key="TinyBG" Color="#EFF1F5" />
            <SolidColorBrush x:Key="PrimaryColor" Color="#07456B" />
            <SolidColorBrush x:Key="PrimaryButton" Color="#125F7B" />
            <SolidColorBrush x:Key="FrtcRed" Color="#FF3900" />
            <SolidColorBrush x:Key="FrtcYellow" Color="#D15F1E"/>
            <SolidColorBrush x:Key="SpeakerBorder" Color="#71D100" />
            <SolidColorBrush x:Key="Masker" Color="#33242424" />
            <SolidColorBrush x:Key="DefaultFontColor" Color="#242424" />
            <SolidColorBrush x:Key="SmallFontColor" Color="#7A7A7A" />

            <DropShadowEffect x:Key="FRTC_WindowShadowEffect" BlurRadius="24" Color="#000000" Opacity="0.2" ShadowDepth="-5"/>

            <Style x:Key="FRTC_WindowStyle" TargetType="Window" x:Shared="False">
                <Style.Setters>
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="CanMinimize"/>
                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome GlassFrameThickness="-1" UseAeroCaptionButtons="False" CaptionHeight="30" 
                                        NonClientFrameEdges="None"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <Grid>
                                    <Border x:Name="layoutRoot" CornerRadius="2" Background="{TemplateBinding Background}" Padding="1" Margin="10"
                                            Effect="{DynamicResource FRTC_WindowShadowEffect}"
                                            BorderThickness="0.5" BorderBrush="#B6B6B6">
                                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="captionGrid" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0" Background="Transparent" VerticalAlignment="Top" Height="30">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border HorizontalAlignment="Stretch" Background="Transparent" Grid.Column="0">
                                                    <TextBlock Foreground="#222222" Margin="16,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12" Text="{TemplateBinding Title}"
                                                               Visibility="{Binding TitleVisibility}"/>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                            <b:InvokeCommandAction Command="{Binding DragMoveWndCommand}" 
                                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>
                                                </Border>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                                                    <Button HorizontalAlignment="Right" Width="32" Height="32" Margin="0,1,1,0" 
                                                        Command="{Binding MinimizeWndCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                            Visibility="{TemplateBinding ShowInTaskbar, Converter={StaticResource BoolToCollapsed}}">
                                                    <!--Visibility="{Binding CanMinimize, Converter={StaticResource BoolToCollapsed}}">-->
                                                        <Button.Template>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border x:Name="layoutBd" CornerRadius="0,2,0,0"  Background="Transparent">
                                                                    <Image HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Stretch="Uniform"
                                                                   Source="{Binding Source={x:Static res:Resources.frtc_window_minimize}, Converter={StaticResource BitmapToImageSource}}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="layoutBd" Property="Background" Value="#F4F4F8"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Button.Template>
                                                    </Button>
                                                    <Button HorizontalAlignment="Right" Width="32" Height="32" Margin="0,1,1,0" Command="{Binding CloseWndCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Button.Template>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border x:Name="layoutBd" CornerRadius="0,2,0,0"  Background="Transparent">
                                                                    <Image x:Name="img" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Stretch="Uniform"
                                                                            Source="{Binding Source={x:Static res:Resources.frtc_window_close}, Converter={StaticResource BitmapToImageSource}}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="layoutBd" Property="Background" Value="#E32726"/>
                                                                        <Setter TargetName="img" Property="Source" Value="{Binding Source={x:Static res:Resources.frtc_window_close_hover}, Converter={StaticResource BitmapToImageSource}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Button.Template>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                            <Rectangle Fill="#000000" Opacity="0.2" Visibility="{Binding ShowMask, Converter={StaticResource BoolToCollapsed}, FallbackValue={x:Static Visibility.Hidden}}"/>
                                            <Border Grid.Row="1">
                                                <ContentPresenter/>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="FRTC_NoCaptionWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="AllowsTransparency" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ResizeMode" Value="NoResize"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Grid Background="Transparent">
                                <Rectangle Fill="#FFFFFF" Margin="5" RadiusX="2" RadiusY="2" Effect="{DynamicResource FRTC_WindowShadowEffect}"/>
                                <Border Background="Transparent" Margin="5"
                                    BorderBrush="{DynamicResource FRTC_DefaultBorderColor}"  
                                    BorderThickness="1"  
                                    Padding="{TemplateBinding Margin}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                                    CornerRadius="2">
                                    <ContentPresenter />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            

            <SolidColorBrush x:Key="FRTC_PrimaryBtnBackColor" Color="#026FFE"/>
            <SolidColorBrush x:Key="FRTC_PrimaryBtnBackColorHover" Color="#1F80FF"/>
            <SolidColorBrush x:Key="FRTC_PrimaryBtnDisableBackColor" Color="#D7DADD"/>
            <SolidColorBrush x:Key="FRTC_PrimaryBtnFontColor" Color="#FFFFFF"/>
            
            <SolidColorBrush x:Key="FRTC_SecondaryBtnBackColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="FRTC_SecondaryBtnBackColorHover" Color="#F8F9FA"/>
            <SolidColorBrush x:Key="FRTC_SecondaryBtnBorderColor" Color="#999999"/>
            <SolidColorBrush x:Key="FRTC_SecondaryBtnBorderColorHover" Color="#666666"/>
            <SolidColorBrush x:Key="FRTC_SecondaryBtnFontColor" Color="#333333"/>

            <Style x:Key="FRTC_PrimaryBtnStyle" TargetType="Button">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource FRTC_PrimaryBtnBackColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource FRTC_PrimaryBtnFontColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="layout" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource FRTC_PrimaryBtnBackColorHover}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource FRTC_PrimaryBtnDisableBackColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="FRTC_SecondaryBtnStyle" TargetType="Button">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{DynamicResource FRTC_SecondaryBtnBackColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource FRTC_SecondaryBtnFontColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource FRTC_SecondaryBtnBorderColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="layout" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource FRTC_SecondaryBtnBackColorHover}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource FRTC_SecondaryBtnBorderColorHover}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="FRTC_ImageBtnStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Image Width="auto" Height="auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Source="{TemplateBinding Content}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_RotationAnimeImageBtnStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Image x:Name="img" Width="auto" Height="auto" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" 
                                       RenderTransformOrigin="0.5,0.5" Source="{TemplateBinding Content}">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="img" Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                            From="0" To="360" Duration="0:0:0.5">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            

            <Style x:Key="FRTC_DeleteBtnStyle" TargetType="Button">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{DynamicResource FRTC_SecondaryBtnBackColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource FRTC_SecondaryBtnFontColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource FRTC_SecondaryBtnBorderColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="layout" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                                                Background="{TemplateBinding Background}" CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                                TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource FRTC_SecondaryBtnBackColorHover}" />
                        <Setter Property="BorderBrush" Value="#E32726"/>
                        <Setter Property="Foreground" Value="#E32726"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="FRTC_TextBtnStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2"
                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <TextBlock x:Name="tbTxt" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center"
                                           Text="{TemplateBinding Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="FRTC_DefaultFontColor" Color="#333333"/>
            <SolidColorBrush x:Key="FRTC_DarkerFontColor" Color="#222222"/>
            <SolidColorBrush x:Key="FRTC_BrighterFontColor" Color="#444444"/>
            <SolidColorBrush x:Key="FRTC_DefaultBorderColor" Color="#DEDEDE"/>
            <SolidColorBrush x:Key="FRTC_LightBorderColor" Color="#EEEFF0"/>
            <SolidColorBrush x:Key="FRTC_DarkBorderColor" Color="#999999"/>
            <SolidColorBrush x:Key="FRTC_PopupBorderColor" Color="#666666"/>
            <SolidColorBrush x:Key="FRTC_LightBackgroundColor" Color="#F8F9FA"/>


            <Style x:Key="FRTC_DefaultFontText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{DynamicResource FRTC_DefaultFontColor}" />
                <Setter Property="LineHeight" Value="16" />
            </Style>

            <Style x:Key="FRTC_DefaultTextBoxStyle" TargetType="TextBox">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource FRTC_DefaultBorderColor}"/>
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="frtcView:InputBoxIcon.ShowIcon" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="border"
                                    CornerRadius="2"
                                    BorderBrush="{StaticResource FRTC_DefaultBorderColor}"
                                    BorderThickness="1"
                                    Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center"
                                                    Focusable="false"
                                                    HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden"
                                                    Margin="0,0,32,0"/>
                                </Border>
                                <Image x:Name="icon" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0"
                                                Source="{TemplateBinding frtcView:InputBoxIcon.InputIcon}" Visibility="Collapsed"/>
                                <TextBlock x:Name="tbWaterMark" Text="{TemplateBinding Tag}" HorizontalAlignment="Left" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="#999999"
                                           Visibility="Collapsed" Margin="4,0,0,0" Cursor="IBeam"/>
                                <Button x:Name="btnClear" Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0"
                                        Style="{StaticResource FRTC_ImageBtnStyle}" Visibility="Visible"
                                        frtcView:InputBoxClearButton.DoClearText="True" Focusable="False"
                                        Content="{Binding Source={x:Static res:Resources.frtc_delete_input}, Converter={StaticResource BitmapToImageSource}}">
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="tbWaterMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,0,0,0"/>
                                </Trigger>
                                <Trigger Property="frtcView:InputBoxIcon.ShowIcon" Value="True">
                                    <Setter TargetName="icon" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="36,0,32,0"/>
                                    <Setter TargetName="tbWaterMark" Property="Margin" Value="40,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="False">
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FRTC_DarkBorderColor}"/>
                                </Trigger>
                                <!--
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#909090"/>
                                    <Setter Property="Foreground" Value="Red" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Foreground" Value="Blue" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                                </Trigger>
                                -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_DefaultPwdBoxStyle" TargetType="PasswordBox">
                <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="frtcView:PasswordBoxMonitor.IsMonitoring"  Value="True"/>
                <Setter Property="frtcView:InputBoxIcon.ShowIcon" Value="False"/>
                <Setter Property="Helper:PasswordHelper.Attach" Value="True"/>
                <Setter Property="Helper:PasswordHelper.PlainTextButton" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Grid>
                                <Border Name="Bd" Background="{TemplateBinding Background}"  BorderThickness="1"
                                        BorderBrush="{StaticResource FRTC_DefaultBorderColor}" CornerRadius="2" SnapsToDevicePixels="true">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  VerticalContentAlignment="Center"
                                                  Focusable="false"
                                                  Visibility="Visible"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Margin="0,0,32,0"/>
                                </Border>
                                <Image x:Name="icon" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0"
                                               Source="{Binding Source={x:Static res:Resources.frtc_input_password}, Converter={StaticResource BitmapToImageSource}}" 
                                               Visibility="Collapsed"/>
                                <TextBlock Visibility="Collapsed" Name="waterMark" HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" 
                                           Foreground="{StaticResource FRTC_DarkBorderColor}" Text="{TemplateBinding Tag}" Focusable="False" Cursor="IBeam"/>
                                <TextBox Visibility="Collapsed" Name="plainText" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="1,0,64,0" BorderThickness="0"
                                         Foreground="#222222" FontSize="14" Cursor="IBeam"
                                         Text="{Binding Path=(Helper:PasswordHelper.Password),Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                         frtcView:TextBoxEndingCaretIndexBehavior.IsMonitoring="True"/>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
                                    <Button x:Name="btnClear" Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0"
                                        Style="{StaticResource FRTC_ImageBtnStyle}" Visibility="Visible" Cursor="Hand"
                                        frtcView:InputBoxClearButton.DoClearText="True" Focusable="False"
                                        Content="{Binding Source={x:Static res:Resources.frtc_delete_input}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <ToggleButton x:Name="btnPlainText" Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0"
                                                    Visibility="Collapsed" Focusable="False" IsChecked="False" Cursor="Hand">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid x:Name="layout">
                                                                <Image x:Name="image"  Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="true">
                                                                    <Setter Property="Source" TargetName="image"
                                                                        Value="{Binding Source={x:Static res:Resources.frtc_pwd_show}, Converter={StaticResource BitmapToImageSource}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="false">
                                                                    <Setter Property="Source" TargetName="image"
                                                                        Value="{Binding Source={x:Static res:Resources.frtc_pwd_hide}, Converter={StaticResource BitmapToImageSource}}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Visibility" TargetName="waterMark" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="frtcView:InputBoxIcon.ShowIcon" Value="True">
                                    <Setter TargetName="icon" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="36,0,32,0"/>
                                    <Setter TargetName="plainText" Property="Margin"  Value="36,0,64,0"/>
                                    <Setter TargetName="waterMark" Property="Margin"  Value="40,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="False">
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="btnPlainText" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource FRTC_DarkBorderColor}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding ElementName=plainText, Path=IsFocused}" Value="True">
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="btnPlainText" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Helper:PasswordHelper.PlainTextButton" Value="True"/>
                                        <Condition Property="Helper:PasswordHelper.HasPassword" Value="True"/>
                                        <Condition Property="IsFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="btnPlainText" Property="Visibility" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="Helper:PasswordHelper.HasPassword" Value="False">
                                    <Setter TargetName="waterMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="btnClear" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="btnPlainText" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="plainText" Property="Margin" Value="1,0,0,0"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding ElementName=btnPlainText, Path=IsChecked}" Value="True">
                                    <Setter TargetName="plainText" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="plainText" Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_CheckBoxLikeRadioBtnStyle" TargetType="RadioButton">
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid x:Name="layout" Height="{TemplateBinding Height}">
                                <StackPanel Orientation="Horizontal">
                                    <Border x:Name="checkBd" Height="14" Width="14" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Background="#FFFFFF">
                                        <Image x:Name="checkImg" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Source="{Binding Source={x:Static res:Resources.frtc_checked}, Converter={StaticResource BitmapToImageSource}}"
                                               Visibility="Hidden"/>
                                    </Border>
                                    <TextBlock x:Name="txt" Margin="4,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource FRTC_DefaultFontColor}" 
                                               FontSize="14" Text="{TemplateBinding Content}"/>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkBd" Property="Background" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkBd" Property="BorderBrush" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkImg" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="txt" Property="Foreground" Value="{StaticResource FRTC_DefaultBorderColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_DefaultCheckBoxStyle1" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
                <Setter Property="Height" Value="25"/>
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Margin" Value="0,20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                    <Rectangle x:Name="CheckBoxRectangle" Fill="Red" RadiusY="2" RadiusX="2"/>
                                    <Rectangle x:Name="CheckBoxRectangleOut" Stroke="Green" StrokeThickness="1" RadiusY="2" RadiusX="2"/>
                                    <Grid x:Name="CheckedMark" Width="20" Height="20" Visibility="Collapsed">
                                        <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M1,9 L10,17" Stroke="Blue"/>
                                        <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M8,17 L20,4" Stroke="Blue"/>
                                    </Grid>
                                </Grid>
                                <TextBlock x:Name="txt" Grid.Column="1" Text="{TemplateBinding Content}" FontSize="18" Foreground="White" VerticalAlignment="Center" Margin="14,0,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                    <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#026FFE"></Setter>
                                    <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="txt" Property="Foreground" Value="{StaticResource FRTC_LightBorderColor}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_DefaultCheckBoxStyle" TargetType="CheckBox">
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid x:Name="layout" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="checkBd" Grid.Column="0" Height="14" Width="14" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Background="#FFFFFF">
                                        <Image x:Name="checkImg" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                               Source="{Binding Source={x:Static res:Resources.frtc_checked}, Converter={StaticResource BitmapToImageSource}}"
                                               Visibility="Hidden"/>
                                    </Border>
                                    <TextBlock x:Name="txt" Grid.Column="1" Margin="4,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource FRTC_DefaultFontColor}" 
                                               FontSize="14" MaxWidth="{TemplateBinding MaxWidth}" HorizontalAlignment="Left" Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkBd" Property="Background" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkBd" Property="BorderBrush" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkImg" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="txt" Property="Foreground" Value="{StaticResource FRTC_DefaultBorderColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FRTC_RichContentCheckBoxStyle" TargetType="CheckBox">
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid x:Name="layout" Height="{TemplateBinding Height}">
                                <StackPanel Orientation="Horizontal">
                                    <Border x:Name="checkBd" Height="14" Width="14" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Background="#FFFFFF">
                                        <Image x:Name="checkImg" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                               Source="{Binding Source={x:Static res:Resources.frtc_checked}, Converter={StaticResource BitmapToImageSource}}"
                                               Visibility="Hidden"/>
                                    </Border>
                                    <ContentPresenter x:Name="txt" Grid.Column="1" IsEnabled="{TemplateBinding IsEnabled}" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="14,0,0,0"/>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkBd" Property="Background" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkBd" Property="BorderBrush" Value="{StaticResource FRTC_PrimaryBtnBackColor}"/>
                                    <Setter TargetName="checkImg" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <Style x:Key="FRTC_DefaultComboBoxStyle" TargetType="ComboBox">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <ControlTemplate.Resources>
                                <converter:IntToVisibility x:Key="IntToVisibility"/>
                            </ControlTemplate.Resources>
                            <Border BorderBrush="{DynamicResource FRTC_DefaultBorderColor}" BorderThickness="1" CornerRadius="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter x:Name="PART_SelectedItem" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="2,0,2,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    </ContentPresenter>
                                    <TextBox x:Name="PART_EditableTextBox" Visibility="{TemplateBinding IsEditable, Converter={StaticResource BoolToCollapsed}}" Grid.Column="0" 
                                             FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource FRTC_DarkerFontColor}" IsReadOnly="{TemplateBinding IsReadOnly}"
                                             HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0"
                                             Text="{TemplateBinding Text}" BorderThickness="0"/>

                                    <TextBlock x:Name="NullText" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource FRTC_DarkerFontColor}"
                                               Visibility="{Binding RelativeSource={RelativeSource Self}, Path=SelectedIndex, Converter={StaticResource IntToVisibility}, ConverterParameter=Reverse}"                           
                                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0" Text="{TemplateBinding frtcView:ComboBoxHelper.NullItemText}"/>

                                    <ToggleButton x:Name="PART_DropDownToggle" Grid.Column="1" Height="32" Width="32" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                    <Image Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Source={x:Static res:Resources.frtc_downward}, Converter={StaticResource BitmapToImageSource}}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <Popup x:Name="Popup" Grid.ColumnSpan="2" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False" PopupAnimation="Slide" AllowsTransparency="True"
                                           VerticalOffset="8">
                                        <Popup.Effect>
                                            <DropShadowEffect BlurRadius="24" ShadowDepth="4" Color="#000000" Opacity="0.2" Direction="90"/>
                                        </Popup.Effect>
                                        <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <Border x:Name="DropDownBorder" BorderBrush="{StaticResource FRTC_DefaultBorderColor}" BorderThickness="1" CornerRadius="2"
                                                    Background="#FFFFFF">
                                                <ScrollViewer SnapsToDevicePixels="True">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Border>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseUp">
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            
            <!--Control colors.-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FF666666</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFEEEFF0</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF999999</Color>


            <Color x:Key="GlyphColor">#FF999999</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
                <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
                <GradientStop Color="{DynamicResource ControlMediumColor}"
                        Offset="0.5" />
                <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                         StartPoint="0,0"
                         EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#000000FF"
                        Offset="0" />
                        <GradientStop Color="#600000FF"
                        Offset="0.4" />
                        <GradientStop Color="#600000FF"
                        Offset="0.6" />
                        <GradientStop Color="#000000FF"
                        Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver"/>
                            <VisualState x:Name="Pressed" />
                            <VisualState x:Name="Disabled">
                                <Storyboard>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledForegroundColor}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                
                            </VisualState>
                            <VisualState x:Name="Unchecked" />
                            <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                        <Border.BorderBrush>
                            <!--<LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                            </LinearGradientBrush>-->
                            <SolidColorBrush Color="Gray"/>
                        </Border.BorderBrush>
                        <Border.Background>

                            <!--<LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>-->
                            <SolidColorBrush Color="Transparent"/>

                        </Border.Background>
                    </Border>
                    <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                        </Border.Background>
                    </Border>
                    <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                        </Path.Fill>
                    </Path>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels"
          Value="true" />
                <Setter Property="OverridesDefaultStyle"
          Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
                <Setter Property="MinWidth"
          Value="120" />
                <Setter Property="MinHeight"
          Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="EditStates">
                                        <VisualState x:Name="Editable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Uneditable" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ToggleButton x:Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                  RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox"
                   Style="{x:Null}"
                   Template="{StaticResource ComboBoxTextBox}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Margin="3,3,23,3"
                   Focusable="True"
                   Background="Transparent"
                   Visibility="Hidden"
                   IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                    <Popup.Effect>
                                        <DropShadowEffect BlurRadius="24" ShadowDepth="10" Direction="90" Color="#000000" Opacity="0.2"/>
                                    </Popup.Effect>
                                    <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                      BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                            </Border.BorderBrush>
                                            <Border.Background>
                                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                            </Border.Background>
                                        </Border>
                                        <ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems"
                   Value="false">
                                    <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                                </Trigger>
                                <Trigger Property="IsGrouping"
                   Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                                    <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="4" />
                                    <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels"
          Value="true" />
                <Setter Property="OverridesDefaultStyle"
          Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                
                                <Border Background="#666666" CornerRadius="2"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Opacity" Value="0.2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Opacity" Value="0.2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"  Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Opacity"  Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="#90000000" Width="0" Height="0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="0,1,1,6"/>
                <Setter Property="Width"  Value="4"/>
                <Setter Property="MinWidth"  Value="4"/>
                <Setter Property="Opacity"   Value="0.2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <RepeatButton  Grid.Row="0" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                <Track x:Name="PART_Track"   Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Row="2" Style="{StaticResource VerticalScrollBarPageButton2}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Background"  Value="Transparent"/>
                        <Setter Property="Margin" Value="1,0,6,1"/>
                        <Setter Property="Height"   Value="5"/>
                        <Setter Property="MinHeight"  Value="5"/>
                        <Setter Property="Width"    Value="Auto"/>
                        <Setter Property="Opacity" Value="0.2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FRTC_ScrollViewer"
           TargetType="{x:Type ScrollViewer}">
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <Grid Background="{TemplateBinding Background}">
                                    <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                    <ScrollBar x:Name="PART_VerticalScrollBar"
                                       HorizontalAlignment="Right"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Style="{StaticResource for_scrollbar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Style="{StaticResource for_scrollbar}"
                                       VerticalAlignment="Bottom"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="ScrollChanged" >
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1"/>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1"/>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1"/>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_VerticalScrollBar">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_VerticalScrollBar">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_HorizontalScrollBar">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_HorizontalScrollBar">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <!--<Style TargetType="ScrollBar" BasedOn="{StaticResource for_scrollbar}"/>-->

            
            <!--<Style TargetType="ScrollViewer" BasedOn="{StaticResource for_scrollviewer}"/>-->

            <Style x:Key="DefaultFontText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
                <Setter Property="LineHeight" Value="16" />
            </Style>
            <Style x:Key="HeaderFontText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}" />
                <Setter Property="LineHeight" Value="24" />
            </Style>
            <Style x:Key="SmallFontText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="{StaticResource SmallFontColor}" />
                <Setter Property="LineHeight" Value="16" />
            </Style>
            <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource TinyBG}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
            </Style>
            <Style x:Key="DefaultPWDBoxStyle" TargetType="PasswordBox">
                <Setter Property="Background" Value="{StaticResource TinyBG}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{StaticResource DefaultFontColor}" />
            </Style>
            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="{StaticResource PrimaryButton}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="layout" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryColor}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#A6BEC9" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="SecondaryButtonStyle" TargetType="Button">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryButton}" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryButton}" />
                <Setter Property="BorderThickness" Value="2" />
            </Style>
            <Style x:Key="FRTCPopupControl" TargetType="ContentControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid>
                                <Border Margin="10" BorderBrush="Black" BorderThickness="1" CornerRadius="2">
                                    <ContentPresenter/>
                                </Border>
                                <Polygon Points="40,10 80,10 60,0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="FRTC_ToolbarToggleBtnStyle" TargetType="ToggleButton">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border x:Name="layout" BorderThickness="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image x:Name="img" Width="28" Height="28" Stretch="Uniform" Source="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock x:Name="txt" HorizontalAlignment="Center" Height="16" Text="{TemplateBinding Tag}" FontSize="10" Foreground="#666666" FontWeight="Medium"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="layout" Property="Background" Value="#B3F0F0F5"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="FRTC_ToolbarClickBtnStyle" TargetType="Button">
                <Setter Property="Foreground" Value="#666666"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="layout" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image x:Name="img" Width="28" Height="28" Stretch="Uniform" Source="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="txt" Height="16" HorizontalAlignment="Center" Text="{TemplateBinding Tag}"
                                           FontSize="10" Foreground="{TemplateBinding Foreground}" FontWeight="Medium"/>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="layout" Property="Background" Value="#B3F0F0F5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>