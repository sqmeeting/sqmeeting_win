<Window x:Class="SQMeeting.View.ContentSharingToolBar"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SQMeeting"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:converter="clr-namespace:SQMeeting.Converters"
        xmlns:res="clr-namespace:SQMeeting.Properties"
        DataContext="{Binding Source={StaticResource Locator}, Path=FRTCMeetingVideo}"
        mc:Ignorable="d" AllowsTransparency="True" SizeToContent="WidthAndHeight" Width="Auto"
        Title="" WindowStyle="None" Background="Transparent"
        Topmost="True" ShowInTaskbar="False" ResizeMode="CanMinimize">
    <Window.Resources>
        <converter:BitmapToImageSourceConverter x:Key="BitmapToImageSource"/>
        <converter:MicMeterToIconConverter x:Key="MicMerterConverter"/>

        <Style TargetType="ToggleButton" x:Key="MInofImgToogleBtn" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="layout">
                            <Image x:Name="img" Width="24" Height="24" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Source="{TemplateBinding Content}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="deviceListItem">
            <Border x:Name="layout" Height="24" Cursor="Hand" Background="Transparent" BorderThickness="0">
                <StackPanel Orientation="Horizontal" Margin="12,0,0,0">
                    <Image x:Name="imgChecked" Source="{Binding Source={x:Static res:Resources.frtc_checked_blue}, Converter={StaticResource BitmapToImageSource}}"
                           Visibility="Hidden" Width="12" Height="12" Stretch="Uniform" VerticalAlignment="Center"/>
                    <TextBlock x:Name="txt" Text="{Binding DeviceName}" VerticalAlignment="Center" Margin="4,0,0,0" Foreground="#222222" FontSize="12"/>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="True">
                    <Setter TargetName="imgChecked" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="layout" Property="Background" Value="#1F80FF"/>
                    <Setter TargetName="txt" Property="Foreground" Value="#FFFFFF"/>
                    <Setter TargetName="imgChecked" Property="Source" Value="{Binding Source={x:Static res:Resources.frtc_checked_white}, Converter={StaticResource BitmapToImageSource}}"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Storyboard x:Key="closePopupStory">
            <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetName="tbStreamingURL"
                                                    Storyboard.TargetProperty="(ToggleButton.IsChecked)">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Border CornerRadius="0,0,8,8" Effect="{StaticResource FRTC_WindowShadowEffect}" x:Name="layoutbd" BorderThickness="1" Margin="10,0,10,10" Background="#333333">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="smallBar" Height="24" Width="146" Background="Transparent">
                <Button Style="{StaticResource FRTC_ImageBtnStyle}" x:Name="signal" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="20" Height="20"
                       Content="{Binding Source={x:Static res:Resources.frtc_singal_good}, Converter={StaticResource BitmapToImageSource}}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click" >
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetName="statisticsPopup"
                                                    Storyboard.TargetProperty="(Popup.IsOpen)">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Popup x:Name="statisticsPopup" PlacementTarget="{Binding ElementName=signal}" Placement="Bottom" AllowsTransparency="True"
                       StaysOpen="True">
                    <Popup.Resources>
                        <Storyboard x:Key="closeStoryboard" Storyboard.TargetName="statisticsPopup">
                            <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetProperty="(Popup.IsOpen)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetProperty="(Popup.StaysOpen)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </Popup.Resources>
                    <Popup.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetProperty="(Popup.StaysOpen)">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource closeStoryboard}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Popup.Triggers>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Binding="{Binding ElementName=statisticsPopup, Path=IsOpen}" Value="True">
                            <b:InvokeCommandAction Command="{Binding StartStatiticsTimerCommand}"/>
                        </b:DataTrigger>
                        <b:DataTrigger Binding="{Binding ElementName=statisticsPopup, Path=IsOpen}" Value="False">
                            <b:InvokeCommandAction Command="{Binding StoptStatiticsTimerCommand}"/>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>
                    <Grid Background="Transparent">
                        <Rectangle Fill="#FFFFFF" Effect="{StaticResource FRTC_WindowShadowEffect}" Margin="5"/>
                        <Border CornerRadius="2" BorderBrush="{StaticResource FRTC_DefaultBorderColor}" BorderThickness="1"
                                Margin="5" Width="260" Height="205">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Margin="16,8,0,0" Orientation="Horizontal">
                                    <TextBlock FontSize="12" Foreground="#666666" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_DELAY}" VerticalAlignment="Center"/>
                                    <TextBlock Margin="16,0,0,0" FontSize="12" Foreground="#222222" VerticalAlignment="Center" Text="{Binding SelfStatistics.Delay}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Margin="16,8,0,0" Orientation="Horizontal">
                                    <TextBlock FontSize="12" Foreground="#666666" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_RATE}" VerticalAlignment="Center"/>
                                    <Image Margin="16,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_upload}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.TotalUploadRate}"/>
                                    <Image Margin="8,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_download}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.TotalDownloadRate}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="2" Margin="16,8,0,0" Orientation="Horizontal">
                                    <TextBlock FontSize="12" Foreground="#666666" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_AUDIO}" VerticalAlignment="Center"/>
                                    <Image Margin="16,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_upload}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.AudioUploadRate}"/>
                                    <Image Margin="8,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_download}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.AudioDownloadRate}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="3" Margin="16,8,0,0" Orientation="Horizontal">
                                    <TextBlock FontSize="12" Foreground="#666666" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_VIDEO}" VerticalAlignment="Center"/>
                                    <Image Margin="16,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_upload}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.VideoUploadRate}"/>
                                    <Image Margin="8,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_download}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.VideoDownloadRate}"/>
                                </StackPanel>
                                <StackPanel Grid.Row="4" Margin="16,8,0,0" Orientation="Horizontal">
                                    <TextBlock FontSize="12" Foreground="#666666" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_CONTENT}" VerticalAlignment="Center"/>
                                    <Image Margin="16,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_upload}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="{Binding SelfStatistics.ContentUploadRate}"/>
                                    <Image Margin="8,0,0,0" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
                                           Source="{Binding Source={x:Static res:Resources.frtc_icon_download}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <TextBlock Margin="2,0,0,0" Width="88" VerticalAlignment="Center" FontSize="12" Foreground="#222222" Text="-"/>
                                </StackPanel>
                                <Button Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand"
                                        Style="{StaticResource FRTC_TextBtnStyle}" Background="Transparent" BorderThickness="0"
                                        Foreground="#026FFE" Content="{x:Static res:Resources.FRTC_MEETING_SDKAPP_STATISTICS_INTERNAL}" FontSize="12" Command="{Binding PopupStatisticsWnd}">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard Storyboard="{StaticResource closeStoryboard}"/>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </Popup>
                <TextBlock x:Name="tbDuration" Grid.Column="1" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding MainTitle}" 
                           FontSize="14" Foreground="#DEDEDE" FontWeight="Medium"/>
                <!--<TextBlock x:Name="tbMeetingName" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,12,0" Text="{Binding MeetingName}" 
                           FontSize="14" Foreground="#DEDEDE" MaxWidth="100" FontWeight="Medium" TextTrimming="CharacterEllipsis"/>-->
            </Grid>
            <UniformGrid x:Name="fullBar" Grid.Row="1" Rows="1" Height="68" Width="800" Background="Transparent"
                         Visibility="Collapsed">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="auto">
                    <ToggleButton HorizontalAlignment="Left" Margin="0,0,0,0" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="48"
                              Command="{Binding MuteMic}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                                <Setter Property="Content" Value="{Binding MicMeterLevel, Converter={StaticResource MicMerterConverter}, ConverterParameter=toolbar, Mode=OneWay}"/>
                                <Setter Property="IsChecked" Value="{Binding MicMuted, Mode=TwoWay}"/>
                                <!--<Setter Property="IsEnabled" Value="{Binding AllowUnmute, Mode=TwoWay}"/>-->
                                <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_MUTE}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_mic_muted}, Converter={StaticResource BitmapToImageSource}}"/>
                                        <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_UNMUTEAUDIO}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton x:Name="tbSwitchAudio" HorizontalAlignment="Right" Width="12" Height="48" Margin="2,0,0,0">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="layout" CornerRadius="2" Background="#F0F0F5">
                                                <Image Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Source={x:Static res:Resources.frtc_up}, Converter={StaticResource BitmapToImageSource}}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup x:Name="popupSwitchAudio" PlacementTarget="{Binding ElementName=tbSwitchAudio}" Placement="Bottom" HorizontalOffset="-60" VerticalOffset="20"
                           IsOpen="{Binding ElementName=tbSwitchAudio, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True">
                        <Border x:Name="switchAudioLayout" Width="auto" Height="auto" CornerRadius="4" Margin="10" Padding="0,12,0,12" Background="#F8F9FA" Effect="{StaticResource FRTC_WindowShadowEffect}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="16,0,0,0" Height="18">
                                    <Image Source="{Binding Source={x:Static res:Resources.frtc_toolbar_switch_speaker}, Converter={StaticResource BitmapToImageSource}}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                    <TextBlock Text="{x:Static res:Resources.FRTC_MEETING_TOOLBAR_SWITCH_SPEAKER}" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                                </StackPanel>
                                <ListView x:Name="listSpeaker" Grid.Row="1" Margin="0,8,0,8" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedItem="{Binding Source={StaticResource Locator}, Path=Setting.CurrentSpeakerDevice, Mode=OneWay}"
                                          ItemsSource="{Binding Source={StaticResource Locator}, Path=Setting.SpeakerDeviceList}" Background="Transparent"
                                          SelectedValuePath="DeviceID">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Margin" Value="0,0,8,0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction Command="{Binding Source={StaticResource Locator}, Path=Setting.SetSpeakerDevice}" CommandParameter="{Binding ElementName=listSpeaker, Path=SelectedValue}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ListView>
                                <Rectangle Height="1" Fill="#D1D1D1" Grid.Row="1" VerticalAlignment="Bottom"/>
                                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16,8,0,0" Height="18">
                                    <Image Source="{Binding Source={x:Static res:Resources.frtc_toolbar_switch_mic}, Converter={StaticResource BitmapToImageSource}}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                    <TextBlock Text="{x:Static res:Resources.FRTC_MEETING_TOOLBAR_SWITCH_MIC}" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                                </StackPanel>
                                <ListView x:Name="listMic" Grid.Row="3" Margin="0,8,0,0" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedItem="{Binding Source={StaticResource Locator}, Path=Setting.CurrentMicDevice, Mode=OneWay}"
                                          ItemsSource="{Binding Source={StaticResource Locator}, Path=Setting.MicrophoneDeviceList}" Background="Transparent"
                                          SelectedValuePath="DeviceID">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Margin" Value="0,0,8,0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction Command="{Binding Source={StaticResource Locator}, Path=Setting.SetMicDevice}" CommandParameter="{Binding ElementName=listMic, Path=SelectedValue}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ListView>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="auto">
                    <ToggleButton x:Name="tbMuteCamera" HorizontalAlignment="Left" MinWidth="48" MaxWidth="60" Height="{Binding ElementName=fullBar, Path=Height}"
                              Command="{Binding MuteLocalVideo}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                                <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_local_video}, Converter={StaticResource BitmapToImageSource}}"/>
                                <Setter Property="IsChecked" Value="{Binding CameraMuted, Mode=TwoWay}"/>
                                <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_STOP_LOCAL_VIDEO}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_localvideo_muted}, Converter={StaticResource BitmapToImageSource}}"/>
                                        <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_START_LOCAL_VIDEO}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton x:Name="tbSwitchCamera" HorizontalAlignment="Right" Width="12" Height="48" Margin="2,0,0,0">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Visibility" Value="{Binding ElementName=tbMuteCamera, Path=Visibility}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="layout" CornerRadius="2" Background="#F0F0F5">
                                                <Image Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Source={x:Static res:Resources.frtc_up}, Converter={StaticResource BitmapToImageSource}}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup x:Name="popupSwitchCamera" PlacementTarget="{Binding ElementName=tbSwitchCamera}" Placement="Bottom" HorizontalOffset="-60" VerticalOffset="10"
                           IsOpen="{Binding ElementName=tbSwitchCamera, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True">
                        <Border x:Name="switchCameraLayout" Width="auto" Height="auto" CornerRadius="4" Margin="10" Padding="0,12,0,12" Background="#F8F9FA" Effect="{StaticResource FRTC_WindowShadowEffect}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="16,0,0,0" Height="18">
                                    <Image Source="{Binding Source={x:Static res:Resources.frtc_toolbar_switch_camera}, Converter={StaticResource BitmapToImageSource}}"
                                           Width="12" Height="12" VerticalAlignment="Center" Stretch="Uniform"/>
                                    <TextBlock Text="{x:Static res:Resources.FRTC_MEETING_TOOLBAR_SWITCH_CAMERA}" VerticalAlignment="Center" Margin="4,0,0,0"
                                               FontSize="12" Foreground="#666666"/>
                                </StackPanel>
                                <ListView x:Name="listCamera" Grid.Row="1" Margin="0,8,0,0" ItemTemplate="{StaticResource deviceListItem}" SelectionMode="Single"
                                          BorderThickness="0" SelectedItem="{Binding Source={StaticResource Locator}, Path=Setting.CurrentCameraDevice, Mode=OneWay}"
                                          ItemsSource="{Binding Source={StaticResource Locator}, Path=Setting.CameraDeviceList}" Background="Transparent"
                                          SelectedValuePath="DeviceID">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Margin" Value="0,0,8,0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction Command="{Binding Source={StaticResource Locator}, Path=Setting.SetCameraDevice}" CommandParameter="{Binding ElementName=listCamera, Path=SelectedValue}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ListView>
                            </Grid>
                        </Border>
                    </Popup>
                </StackPanel>
                <!--<ToggleButton Height="{Binding ElementName=fullBar, Path=Height}" Width="48"
                              Command="{Binding StartShareDesk}" Visibility="Collapsed">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_sharing}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="IsChecked" Value="{Binding ShareContentEnable, Mode=OneWay}"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="Tag" Value="新的共享"/>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->
                <!--<ToggleButton HorizontalAlignment="Center" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="60"
                              Command="{Binding HideMyVideoCommand}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_localpreview_closed}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="IsChecked" Value="{Binding LocalVideoEnabled, Mode=OneWay}"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_SHOW_PREVIEW}"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_local_preview}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_HIDE_PREVIEW}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsAudioOnly}" Value="False"/>
                                        <Condition Binding="{Binding LocalOnly}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>-->
                <Button Height="{Binding ElementName=fullBar, Path=Height}" Width="48" Tag="{x:Static res:Resources.FRTC_MEETING_SDKAPP_INVITE_TO_MEETING}" Command="{Binding PopupInviteWnd}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource FRTC_ToolbarClickBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_invite}, Converter={StaticResource BitmapToImageSource}}"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="62" Height="{Binding ElementName=fullBar, Path=Height}" Tag="{x:Static res:Resources.FRTC_MEETING_SDKAPP_PARTICIPANT}" Command="{Binding PopupRosterWnd}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_participant}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid x:Name="layout" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Image x:Name="img" Width="28" Height="28" Stretch="Uniform" Source="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock x:Name="txt" Height="16" HorizontalAlignment="Center" Text="{TemplateBinding Tag}"
                                                    FontSize="10" Foreground="#666666" FontWeight="Medium"/>
                                            </StackPanel>
                                            <Ellipse Width="6" Height="6" Fill="#FA5150" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,15,0" Visibility="{Binding NewUnmuteApplications, Converter={StaticResource BoolToCollapsed}}"/>
                                            <TextBlock x:Name="remark" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="42,12,0,0" FontSize="10" Foreground="#333333" 
                                                       Text="{Binding RosterNum}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="layout" Property="Background" Value="#B3F0F0F5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button HorizontalAlignment="Center" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="48"
                              Command="{Binding SendMeetingMsgCommand}" CommandParameter="True">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource FRTC_ToolbarClickBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_textoverlay_start}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_ENABLE_TEXT_OVERLAY}"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelfOwnedMeeting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsGuestMeeting}" Value="False"/>
                                        <Condition Binding="{Binding IsOperatorRole}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button HorizontalAlignment="Center" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="48"
                              Command="{Binding SendMeetingMsgCommand}" CommandParameter="False">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource FRTC_ToolbarClickBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_textoverlay_stop}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_DISABLE_TEXT_OVERLAY}"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelfOwnedMeeting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsGuestMeeting}" Value="False"/>
                                        <Condition Binding="{Binding IsOperatorRole}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ToggleButton HorizontalAlignment="Center" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="48"
                              Command="{Binding EnableRecordingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_record}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="IsChecked" Value="{Binding IsRecording, Mode=OneWay}"/>
                            <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_START_RECORDING_TOOLBAR}"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_stop_recording}, Converter={StaticResource BitmapToImageSource}}"/>
                                    <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_STOP_RECORDING_TOOLBAR}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding EnableRecordingAndStreaming}" Value="True"/>
                                        <Condition Binding="{Binding SelfOwnedMeeting}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding EnableRecordingAndStreaming}" Value="True"/>
                                        <Condition Binding="{Binding IsGuestMeeting}" Value="False"/>
                                        <Condition Binding="{Binding IsOperatorRole}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <StackPanel x:Name="streamingButtons" Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding EnableRecordingAndStreaming}" Value="True"/>
                                        <Condition Binding="{Binding IsGuestMeeting}" Value="False"/>
                                        <Condition Binding="{Binding IsOperatorRole}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <ToggleButton x:Name="tbStreaming" HorizontalAlignment="Center" Height="{Binding ElementName=fullBar, Path=Height}" MinWidth="36"
                              Command="{Binding EnableStreamingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}"
                                  Visibility="{Binding ElementName=streamingButtons, Path=Visibility}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                                <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_stream}, Converter={StaticResource BitmapToImageSource}}"/>
                                <Setter Property="IsChecked" Value="{Binding IsStreaming, Mode=OneWay}"/>
                                <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_START_STREAMING_TOOLBAR}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_stop_streaming}, Converter={StaticResource BitmapToImageSource}}"/>
                                        <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_STOP_STREAMING_TOOLBAR}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton x:Name="tbStreamingURL" HorizontalAlignment="Right" Width="12" Height="48" Margin="5,0,0,0">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="layout" CornerRadius="2" Background="#F0F0F5">
                                                <Image Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Source={x:Static res:Resources.frtc_up}, Converter={StaticResource BitmapToImageSource}}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding EnableRecordingAndStreaming}" Value="True"/>
                                            <Condition Binding="{Binding IsGuestMeeting}" Value="False"/>
                                            <Condition Binding="{Binding IsOperatorRole}" Value="True"/>
                                            <Condition Binding="{Binding IsStreaming}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup x:Name="popupSharingStreaming" PlacementTarget="{Binding ElementName=tbStreamingURL}" Placement="Bottom" HorizontalOffset="-60" VerticalOffset="-5"
                           IsOpen="{Binding ElementName=tbStreamingURL, Path=IsChecked}" StaysOpen="True" AllowsTransparency="True">
                        <Border x:Name="layout" Width="147" Height="54" CornerRadius="4" Background="#F8F9FA" Padding="10" Effect="{StaticResource FRTC_WindowShadowEffect}">
                            <Button Content="{x:Static res:Resources.FRTC_MEETING_SHARE_STREAMING}" Cursor="Hand" Command="{Binding PopupStreamingInfoWindow}"
                                    Height="24" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <StackPanel x:Name="layout" Orientation="Horizontal" Background="#FFFFFF">
                                            <Image x:Name="img" Width="16" Height="16" Stretch="Uniform" VerticalAlignment="Center" Margin="16,0,0,0"
                                                   Source="{Binding Source={x:Static res:Resources.frtc_share_streaming}, Converter={StaticResource BitmapToImageSource}}"/>
                                            <TextBlock x:Name="txt" Style="{StaticResource FRTC_DefaultFontText}" Foreground="#333333" FontSize="12"
                                                   Text="{TemplateBinding Content}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="img" Property="Source" Value="{Binding Source={x:Static res:Resources.frtc_share_streaming_hover}, Converter={StaticResource BitmapToImageSource}}"/>
                                                <Setter TargetName="txt" Property="Foreground" Value="#FFFFFF"/>
                                                <Setter TargetName="layout" Property="Background" Value="#026FFE"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard Storyboard="{StaticResource closePopupStory}"/>
                                    </EventTrigger>
                                </Button.Triggers>
                            </Button>
                        </Border>
                    </Popup>
                </StackPanel>
                <ToggleButton Height="{Binding ElementName=fullBar, Path=Height}" Width="48"
                          Command="{Binding ShowSettingViewCommand}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource FRTC_ToolbarToggleBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_toolbar_setting}, Converter={StaticResource BitmapToImageSource}}"/>
                            <Setter Property="IsChecked" Value="{Binding IsSettingViewShow, Mode=TwoWay}"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Tag" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_SETTINGS}"/>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Button MinWidth="48" MaxWidth="60" Height="{Binding ElementName=fullBar, Path=Height}" Tag="{x:Static res:Resources.FRTC_MEETING_SDKAPP_STOP_SHARING}"
                    Command="{Binding StopContentCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource FRTC_ToolbarClickBtnStyle}">
                            <Setter Property="Content" Value="{Binding Source={x:Static res:Resources.frtc_stop_content}, Converter={StaticResource BitmapToImageSource}}"/>
                        </Style>
                    </Button.Style>
                </Button>
            </UniformGrid>
        </Grid>
    </Border>
</Window>
