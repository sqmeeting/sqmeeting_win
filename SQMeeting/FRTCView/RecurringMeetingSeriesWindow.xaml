<Window x:Class="SQMeeting.FRTCView.RecurringMeetingSeriesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SQMeeting.FRTCView"
        xmlns:converter="clr-namespace:SQMeeting.Converters"
        xmlns:res="clr-namespace:SQMeeting.Properties"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="{x:Static res:Resources.FRTC_MEETING_SDKAPP_MEETING_DETAIL}" Height="670" Width="390" WindowStartupLocation="CenterScreen"
        WindowStyle="None" ResizeMode="CanMinimize" Style="{StaticResource FRTC_WindowStyle}"
        DataContext="{Binding FRTCUser.ScheduleMeeting, Source={StaticResource Locator}}">
    <Window.Resources>
        <converter:CloneCommandParamsConverter x:Key="MultiCommandParams"/>
    </Window.Resources>
    <Grid ManipulationBoundaryFeedback="Grid_ManipulationBoundaryFeedback">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="384"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Margin="24,16,0,12" Height="28" FontSize="20" Foreground="#222222" FontWeight="SemiBold" Text="{Binding ScheduleMeetingName}" HorizontalAlignment="Left"/>

        <StackPanel Grid.Row="1" Background="#F9F9F9">
            <StackPanel Orientation="Horizontal" Margin="24,10,5,0">
                <TextBlock Style="{StaticResource FRTC_DefaultFontText}" Foreground="#14C853" FontSize="13" Text="{Binding RecurringMeetingDesc0}"/>
                <TextBlock Style="{StaticResource FRTC_DefaultFontText}" Width="290" Margin="6,0,0,0" FontSize="13" Text="{Binding RecurringMeetingDesc1}"
                            TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" ToolTip="{Binding RecurringMeetingDesc1}"/>
            </StackPanel>
            <TextBlock Margin="24,8,0,10" Style="{StaticResource FRTC_DefaultFontText}" FontSize="13" Text="{Binding RecurringMeetingDesc2}"/>
            <ListView x:Name="recurringMeetingGroup" Height="320" BorderThickness="0" Background="Transparent" AlternationCount="2" ItemsSource="{Binding RecurringMeetingGroup}"
                      SelectionMode="Single">
                <!--SelectedItem="{Binding CurrentSelectdScheduledMeeting, Mode=TwoWay}"-->
                <!--<b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding ShowScheduledMeetingDetailCommand}" CommandParameter="{Binding ElementName=recurringMeetingGroup, Path=SelectedValue}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>-->
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Template>
                    <ControlTemplate>
                        <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden"
                                      PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" Style="{StaticResource FRTC_ScrollViewer}"
                                      BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding MinWidth}"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="40" Width="390" HorizontalAlignment="Stretch">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                            <Setter Property="Background" Value="#FFFFFF"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex)}" Value="1">
                                            <Setter Property="Background" Value="#F9F9F9"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#E4EFFF"/>
                                            <Setter Property="TextBlock.Foreground" Value="#026FFE"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.08*"/>
                                <ColumnDefinition Width="0.35*"/>
                                <ColumnDefinition Width="0.17*"/>
                                <ColumnDefinition Width="0.15*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="5,0,0,0" Style="{StaticResource FRTC_DefaultFontText}" Grid.Column="0" Text="{Binding BeginTimeStr}" Background="Transparent"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Style="{StaticResource FRTC_DefaultFontText}" Grid.Column="1" Text="{Binding MeetingDayOfWeek}" Background="Transparent"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Style="{StaticResource FRTC_DefaultFontText}" Grid.Column="2" Text="{Binding MeetingTime}" Background="Transparent"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="3" Margin="2,0,0,0" VerticalAlignment="Center" Foreground="#FF7218" FontSize="12" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_ABOUT_TO_START}"
                                Visibility="{Binding IsAboutToBegin, Converter={StaticResource BoolToCollapsed}}"  Background="Transparent" HorizontalAlignment="Center" />
                            <TextBlock Grid.Column="3" Margin="2,0,0,0" VerticalAlignment="Center" Foreground="#23D862" FontSize="12" Text="{x:Static res:Resources.FRTC_MEETING_SDKAPP_ALREADY_START}"
                                Visibility="{Binding IsInProgress, Converter={StaticResource BoolToCollapsed}}" Background="Transparent" HorizontalAlignment="Center"/>
                            <Button x:Name="btnMore" Margin="4,0,0,0" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12"                                              
                                    Content="{Binding Source={x:Static res:Resources.frtc_icon_more}, Converter={StaticResource BitmapToImageSource}}" Background="Transparent">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="DataContext" Value="{Binding FRTCUser.ScheduleMeeting, Source={StaticResource Locator}}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                        <Image Width="28" Height="22" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Source="{TemplateBinding Content}"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.Authorized}" Value="True"/>
                                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.IsManuallyAdded}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="meetingMenu" Storyboard.TargetProperty="(Popup.IsOpen)">
                                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Button.Triggers>
                            </Button>
                            <Popup x:Name="meetingMenu" PlacementTarget="{Binding ElementName=btnMore}" Placement="Bottom" StaysOpen="True" AllowsTransparency="True"
                                    PopupAnimation="Slide" Opened="meetingMenu_Opened" Closed="meetingMenu_Closed">
                                <Popup.Resources>
                                    <Storyboard x:Key="closePopup" Storyboard.TargetName="meetingMenu">
                                        <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetProperty="(Popup.StaysOpen)">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <BooleanAnimationUsingKeyFrames BeginTime="0" AutoReverse="False" Duration="0" Storyboard.TargetProperty="(Popup.IsOpen)">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Style x:Key="menuBtn" TargetType="Button" BasedOn="{StaticResource FRTC_TextBtnStyle}">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="Foreground" Value="#333333"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Height" Value="28"/>
                                        <Setter Property="Margin" Value="10,5,10,5"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Command" Value="{Binding FRTCUser.ScheduleMeeting.FRTCScheduleMeetingMenuCommand, Source={StaticResource Locator}}"/>
                                        <Setter Property="CommandParameter">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource MultiCommandParams}">
                                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource FRTC_DarkBorderColor}"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsAvailable}" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource FRTC_DarkBorderColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Resources>
                                <Popup.Triggers>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard Storyboard="{StaticResource closePopup}"/>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Popup.Triggers>
                                <Grid Background="Transparent">
                                    <Rectangle Fill="#FFFFFF" RadiusX="2" RadiusY="2" Margin="3" Effect="{StaticResource FRTC_WindowShadowEffect}"/>
                                    <Border BorderBrush="{StaticResource FRTC_DefaultBorderColor}" BorderThickness="1" CornerRadius="2" Margin="3" Width="auto" Height="auto" 
                                            Background="Transparent">
                                        <StackPanel HorizontalAlignment="Stretch">
                                            <Button Content="{x:Static res:Resources.FRTC_MEETING_SDKAPP_EDIT_MEETING_SHORT}" Tag="edit_single" Style="{StaticResource menuBtn}">
                                                <Button.Triggers>
                                                    <EventTrigger RoutedEvent="Button.Click">
                                                        <EventTrigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource closePopup}"/>
                                                        </EventTrigger.ExitActions>
                                                    </EventTrigger>
                                                </Button.Triggers>
                                                <b:Interaction.Triggers>
                                                    <b:DataTrigger Binding="{Binding MeetingType}" Value="instant">
                                                        <b:ChangePropertyAction PropertyName="Foreground" Value="{StaticResource FRTC_DarkBorderColor}"/>
                                                    </b:DataTrigger>
                                                </b:Interaction.Triggers>
                                            </Button>
                                            <Button Foreground="#E32726" Tag="cancel_single">
                                                <Button.Triggers>
                                                    <EventTrigger RoutedEvent="Button.Click">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard Storyboard="{StaticResource closePopup}"/>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Button.Triggers>
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource menuBtn}">
                                                        <Setter Property="Content" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_CANCEL_SCHEDULE}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsAvailable}" Value="False">
                                                                <Setter Property="Content" Value="{x:Static res:Resources.FRTC_MEETING_SDKAPP_REMOVE_SCHEDULE}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <StackPanel Margin="24,10,24,24" Grid.Row="2" VerticalAlignment="Bottom">
            <Button Height="36" Style="{StaticResource FRTC_PrimaryBtnStyle}" Margin="0,16,0,0" Content="{x:Static res:Resources.FRTC_MEETING_SDKAPP_JOINMEETING}"
                    Command="{Binding JoinRecurringMeetingCommand}"/>
            <Button Height="36" Margin="0,16,0,0" Content="{x:Static res:Resources.FRTC_SDKAPP_RECURRING_MEETING_EDIT}"
                    Command="{Binding PopEditRecurringMeetingGroupCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FRTC_SecondaryBtnStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.Authorized}" Value="True"/>
                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.IsManuallyAdded}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Height="36" Foreground="#E32726" FontSize="16" Margin="0,16,0,0" Content="{x:Static res:Resources.FRTC_SDKAPP_RECURRING_MEETING_CANCEL_GROUP}"
                    Command="{Binding DeleteRecurringMeetingGroupCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FRTC_DeleteBtnStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.Authorized}" Value="True"/>
                                    <Condition Binding="{Binding CurrentLookupRecurringMeeting.IsManuallyAdded}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>
